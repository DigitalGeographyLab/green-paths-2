# Greetings traveller! This is the user's configuration file.
#

# TODO:  -> kirjota tää puhtaaks -> poista wanha


# The path to the OSM PBF file that you want to use. Path OR area should be specified, not both.
# if both are specified, the area will be ignored.

  # (primary) osm_pbf_file_path: this is the path to the osm pbf file. This will override area

  # TODO: : this was removed... but should it be added back?
  # osm_pbf_area: either name of the place e.g. Helsinki or the bbox coordinates e.g. 24.9,60.1,25.1,60.3
#
# The data sources are specified in a list called data_sources. 
# Each data source needs the following keys:
#
#   name: The name of the data source.
#
#   filepath: The path to the data source file. This can be either
#             an absolute path, or a path relative to the directory
#             containing the analysis configuration file.
#
#   type: The type of the data source. This can be one of the
#         following:
#
#         - vector: A vector data source. This can be any vector
#                   format supported by OMat, including GeoPackage,
#                   Shapefile, GeoJSON, and CSV.
#
#         - raster: A raster data source. This can be any raster
#                   format supported by OMat, including GeoPackage,
#                   GeoTIFF, and PNG.
#
# TODO:  add more

# europe e.g. 3035
project_crs: 3879

osm_network:
  # osm_pbf_file_path: /Users/hcroope/omat/GP2/green_paths_2/green_paths_2/src/data/cache/london_osm_network.osm.pbf
  # osm_pbf_file_path: green_paths_2/src/cache/osm/segmented/helsinki_network_segmented.osm.pbf
  # osm_pbf_file_path: green_paths_2/src/cache/osm/hki_metropolitan_ish.osm.pbf

  # TODO: test whith this! 
  # helsinki metropolitan area from pyrosm
  # osm_pbf_file_path: green_paths_2/src/cache/osm/helsinki_network.osm.pbf

  # osm_pbf_file_path: /Users/hcroope/omat/GP2/data/joteborgi.oms.pbf

  osm_pbf_file_path: /Users/hcroope/omat/GP2/green_paths_2/green_paths_2/green_paths_2/src/cache/osm/lintsi_pieni.osm.pbf

  # osm_pbf_file_path:   /Users/hcroope/omat/GP2/green_paths_2/green_paths_2/green_paths_2/src/cache/osm/joteborg_smaller.osm.pbf
  
  # osm_pbf_file_path: /Users/hcroope/omat/GP2/green_paths_2/green_paths_2/src/data/cache/helsinki_history_pbf_osm_network.osm.pbf
  original_crs: 4326
  filter_columns: ["id"]
  segment_sampling_points_amount: 5

data_sources:

  # - name: shade
  #   filepath: /Users/hcroope/omat/GP2/data/robertin_shadow.tif
  #   data_type: raster
  #   min_data_value: 0 # mandatory 
  #   max_data_value: 0.3333333432674408 # mandatory
  #   good_exposure: True # mandatory
  #   original_crs: 3007

  - name: gvi
    filepath: green_paths_2/src/user/data/greenery_points.gpkg
    # data_type: vector
    layer_name: Helsinki_4326
    data_column: Gvi_Mean # mandatory
    min_data_value: 0.0096875 # mandatory
    max_data_value: 86.28875 # mandatory
    good_exposure: True # mandatory
    # data_buffer: 10 # optional, only for vector datas, in meters
    raster_cell_resolution: 10 # mandatory
    # save_raster_file: True # optional
    original_crs: 3879

  # TODO: test with vector data type -> should crash!?
  - name: aqi
    filepath: green_paths_2/src/user/data/allPollutants_2023-12-15T04.nc
    data_type: raster
    # layer_name: Helsinki_4326
    # data_column:  # mandatory
    min_data_value: 0 # mandatory
    max_data_value: 5 # mandatory
    good_exposure: False # mandatory
    raster_cell_resolution: 10 # optional for raster
    # save_raster_file: True # optional
    original_crs: 4326
    custom_processing_function: convert_aq_nc_to_tif_and_scale_offset


  # TODO -> tee validaatioon checkit näistä!
  # - name: noise_helsinki
  #   filepath:  /Users/hcroope/omat/GP2/data/Helsinki_noise_data_2022/Melualueet_2022_01_kadut_maant_LAeq7-22_NPM_20231116_123645.gml # mandatory
  #   data_type: vector # mandatory
  #   raster_cell_resolution: 20 # mandatory -> this is the resolution of the raster cells in meters (e.g. 10 = 10mx10m)
  #   data_column: db_hi # mandatory
  #   columns_of_interest: ["db_lo", "db_hi", "geometry"] # optional
  #   original_crs: 3879 # optional
  #   save_raster_file: True # optional

# TODO: lisää validointiin...

routing:
  - name: aqi
    sensitivity: 5
    allow_missing_data: True

  - name: gvi
    sensitivity: 10




    # TODO -> ponder what would this be...
    # optional and should only be used if know what doing -> calculate only the means...
    # use_only_simple_exposure: True

  # - name: test_data_source
  #   filepath:  "not_a_file.gpkg"
  #   data_type: raster

# TODO: noiden data_sourcesien yhdistäminen -> vihreys e.g. points mut jos ei oo niin layer etc.
# pitäis varmaankin tehdä ns. "preprocessing" jälkeen -> eli konfeissa "mikä lasketaan mitenkin yhteen indexiin?!
# pitäis käyttää value nimiä ja formuloita eli miten lasketaan mitenkin 
# pitä varmaan olla joku hierarkia missä katotaan et jos ei oo jotain niin mee seuraavaan ja sit seuraavassa jos ei niin mee seuraavaan
# ja sit jos on niin pitää laskee yhteen ne mitä on -> muista et pitää olla joustava ja universaali



# e.g. formula like this:
# formula: "(db_lo + db_hi) / 2"  # Mean of db_lo and db_hi 


# TODO:

# -> this the logic for choosing the actions to be applied to the data sources
# Predefined actions
# actions = {
#     "sum": lambda x: x.sum(),
#     "mean": lambda x: x.mean(),
#     "force": lambda gdf, formula: gdf.eval(formula),
#     "minus": lambda x: x.iloc[:, 0] - x.iloc[:, 1:].sum(axis=1),
#     # Add more actions as needed
# }

# # Function to apply action
# def apply_action(gdf, action, columns):
#     return actions[action](gdf[columns])